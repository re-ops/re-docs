(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{201:function(s,a,e){s.exports=e.p+"assets/img/template.ef2d2d1f.png"},211:function(s,a,e){"use strict";e.r(a);var t=e(28),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"re-pack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#re-pack"}},[s._v("#")]),s._v(" Re-pack")]),s._v(" "),t("p",[s._v("Re-pack contains a collection of "),t("a",{attrs:{href:"https://packer.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Packer"),t("OutboundLink")],1),s._v(" templates for creating Re-core ready images for AWS, Digitalocean, KVM and LXD.")]),s._v(" "),t("h2",{attrs:{id:"build"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[s._v("#")]),s._v(" Build")]),s._v(" "),t("p",[s._v("Make sure to install the latest Packer version first:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Build Ubuntu 18.04 AMI")]),s._v("\n$ packer build -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aws_access_key=<access-key>'")]),s._v(" -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aws_secret_key=<secret-key>'")]),s._v(" src/aws/ubuntu-18.04/template.json\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Build ubuntu 18.04 Digitalocean image")]),s._v("\n$ packer build -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'api_token=<your token>'")]),s._v(" src/digital/ubuntu-18.04/template.json\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Build ubuntu 18.04 KVM image (use -var iso_url=/path/to/iso if you have pre-downloaded iso)")]),s._v("\n$ packer build -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user=<your user>'")]),s._v(" -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'password=<your pass>'")]),s._v(" src/kvm/ubuntu-18.04/ubuntu-18.04-server-amd64.json\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Build ubuntu 19.10 KVM image (use -var iso_url=/path/to/iso if you have pre-downloaded iso)")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -s password\n$ packer build -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user=<your user>'")]),s._v(" -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"password='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${password}")]),s._v('"')]),s._v(" src/kvm/ubuntu-18.04/ubuntu-19.10-server-amd64.json\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Build ubuntu 18.04 LXD container")]),s._v("\n$ packer build -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user=<your user>'")]),s._v(" src/lxd/ubuntu-18.04/ubuntu-18.04-server-amd64.json\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Build an XFCE desktop varient")]),s._v("\n$ packer build -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user=<your user>'")]),s._v(" -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'password=<your pass>'")]),s._v(" src/kvm/ubuntu-18.04/ubuntu-18.04-desktop-amd64.json\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Build an Ubutnu Mate desktop varient")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -s password\n$ packer build -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user=<your user>'")]),s._v(" -var "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"password='),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${password}")]),s._v('"')]),s._v(" src/kvm/ubuntu-19.10/ubuntu-19.10-desktop-amd64.json\n")])])]),t("h2",{attrs:{id:"deploy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploy"}},[s._v("#")]),s._v(" Deploy")]),s._v(" "),t("p",[s._v("When creating KVM images deploy our images to a local volume, for example:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copying into the local default volume")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" output/*.img /var/lib/libvirt/images/\n")])])]),t("p",[s._v("Once that done create a new VM instance from the IMG file that we just copied:")]),s._v(" "),t("p",[t("img",{attrs:{src:e(201),alt:"kvm-template"}})]),s._v(" "),t("p",[s._v("This VM instance will be used as the source template from which new VM instances are created.")]),s._v(" "),t("p",[s._v("Note:")]),s._v(" "),t("ul",[t("li",[s._v("Make sure to add a bridged networking interface in addition to the NAT interface it already has.")]),s._v(" "),t("li",[s._v("Re-core uses the following naming convention for images/templates {os-name}-{os-version}_name-{version}.")]),s._v(" "),t("li",[s._v("AWS, LXC and DigitalOcean don't require this step")])])])}),[],!1,null,null,null);a.default=r.exports}}]);