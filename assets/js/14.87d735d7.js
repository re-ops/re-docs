(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{213:function(t,s,a){"use strict";a.r(s);var n=a(28),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"intro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intro"}},[t._v("#")]),t._v(" Intro")]),t._v(" "),a("p",[t._v("In this section we will cover the basic workflows when using Re-mote and Re-core, there are a clear convention to both and they follow similar principles:")]),t._v(" "),a("ul",[a("li",[t._v("Prefer the Use simple functions and protocols (also nice for auto completion and composability)")]),t._v(" "),a("li",[t._v("Use a single REPL for Re-core and Re-mote (both integrate nicely using the "),a("a",{attrs:{href:"https://re-ops.github.io/re-core/re-core.repl.html#var-hosts",target:"_blank",rel:"noopener noreferrer"}},[t._v("hosts"),a("OutboundLink")],1),t._v(" function)")]),t._v(" "),a("li",[t._v("Use an editor attached to the REPL and re eval changing code if possible")]),t._v(" "),a("li",[t._v("When making large changes use the "),a("a",{attrs:{href:"#reloaded"}},[t._v("Reloaded")]),t._v(" workflow")])]),t._v(" "),a("h2",{attrs:{id:"reloaded"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reloaded"}},[t._v("#")]),t._v(" Reloaded")]),t._v(" "),a("p",[t._v("One of the nicest things that the REPLs provides is immediate feedback, it is also a live environment that can change code on the fly without a lengthy restart.")]),t._v(" "),a("p",[t._v("Each time we start our session we run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ lein repl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("go"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnil\n")])])]),a("p",[t._v("The go function is defined in dev/user.clj file, it starts up all of our components by running setup and start:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Re-core setup and start functions")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defn")]),t._v(" start-\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Starts the current development system."')]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("load-secrets "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"secrets"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/secrets.edn"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keys/secret.gpg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conf/load-config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("setup-logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k/create-server-keys "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".curve"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mount/start #"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("'elastic")]),t._v(" #"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("'zero")]),t._v(" #"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("'queue")]),t._v(" #"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("'workers")]),t._v(" #"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("'riemann")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mote-es/initialize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("core-es/initialize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defn")]),t._v(" stop\n   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shuts down and destroys the current development system."')]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sc/halt!"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mount/stop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("stop components by running:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("resets runs both stop and start in once go:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("An alternative to reset is refresh which reloads changed functions (and mount state):")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("refresh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; or (refresh-all)")]),t._v("\n")])])]),a("p",[t._v("Note:")]),t._v(" "),a("ul",[a("li",[t._v("When changing a single function its better to re-eval it.")]),t._v(" "),a("li",[t._v("when changeing multiple functions use refresh/refresh-all.")]),t._v(" "),a("li",[t._v("Reset when you want to reload everthing and have a clean system state.")]),t._v(" "),a("li",[t._v("A compilation error can be fixed by running refresh (reset will not be available in that case).")])]),t._v(" "),a("h2",{attrs:{id:"re-core"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#re-core"}},[t._v("#")]),t._v(" Re-core")]),t._v(" "),a("p",[t._v("Re-core enables us create and manage systems (VMs, physical hosts, containers) by using a fluent functional interface and presets like instance size, volumes and types:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; create 5 c1-medium lxc instances using local node and defaults (user domain and os) using basic provisioning type")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("create lxc local defaults "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("c1")]),t._v("-medium "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":basic")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nRunning create summary:\n\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("db1afab199")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5024861c63")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2a35a70112")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5c4a9e91e4")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("03df18b640")]),t._v("\n\n")])])]),a("p",[t._v("Once we have instances running we can list them:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nid                    hostname          type    os               hypervisor  ip          \n-----------------------------------------------------------------------------------------\n_-1Y9moBhnW7y7Uhb5JD  basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("db1afab199")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":basic")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ubuntu-18")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("04")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":lxc")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("159")]),t._v("\n_u1Y9moBhnW7y7UhbpLo  basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5024861c63")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":basic")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ubuntu-18")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("04")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":lxc")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" \nAO1Y9moBhnW7y7Uhb5Nm  basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2a35a70112")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":basic")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ubuntu-18")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("04")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":lxc")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v("\nAe1Y9moBhnW7y7Uhb5OE  basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5c4a9e91e4")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":basic")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ubuntu-18")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("04")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":lxc")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("155")]),t._v("\nAu1Y9moBhnW7y7Uhb5Ob  basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("03df18b640")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":basic")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ubuntu-18")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("04")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":lxc")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("95")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" \n\n")])])]),a("p",[t._v("Note: the first column contains unique auto generated ids (the elasticsearch system document id) that we can use to directly reference an instance.")]),t._v(" "),a("p",[t._v("The main workflows on systems (in Re-core lingo) are found under src/re_core/repl.clj, we can operate on all running instances by running:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("halt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n#<Future@"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("319b7be4")]),t._v(" pending>\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ:\n\nRunning halt summary:\n\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("db1afab199")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5024861c63")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2a35a70112")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5c4a9e91e4")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("03df18b640")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n#<Future@"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("36feaf62")]),t._v(" pending>\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ:\n\nRunning start summary:\n\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("db1afab199")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5024861c63")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5c4a9e91e4")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2a35a70112")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("03df18b640")]),t._v("\n\n")])])]),a("p",[t._v("All workflows take a filtering function, making it real easy to select the instances we operate on:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("halt "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("by-type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":basic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("db1afab199")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5024861c63")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5c4a9e91e4")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2a35a70112")]),t._v("\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("03df18b640")]),t._v("\n\nRunning halt summary:\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matching "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5Nm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; select instance by partial id matching (ala git style)")]),t._v("\n\nRunning halt summary:\n\n  ✔ basic-"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2a35a70112")]),t._v("\n\n")])])]),a("p",[t._v("Note:")]),t._v(" "),a("ul",[a("li",[t._v("The default filtering function is ip which selects all the running instances (assumed to have an active ip addresset).")]),t._v(" "),a("li",[t._v("Check Re-core "),a("a",{attrs:{href:"https://re-ops.github.io/re-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("API"),a("OutboundLink")],1),t._v(" for a detailed list of the available functions.")])]),t._v(" "),a("h3",{attrs:{id:"presets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#presets"}},[t._v("#")]),t._v(" Presets")]),t._v(" "),a("p",[t._v("Presets are functions that are used to speed up the creation process of new systems, they do that by reducing the boilerplate we have to type and by being easy to memorize, when we use the create function we pass in a number of preset functions that create the system structure for us:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("create lxc local defaults "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("c1")]),t._v("-medium "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":basic")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("The lxc var holds an empty system stub:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("(def lxc {:lxc {} :machine {}})\n\n")])])]),a("p",[t._v("Each preset function adds in more information to our stub for example local sets the system node to be localhost for both KVM and LXC instances:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("assoc-in instance "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("figure-virt instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" local "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":localhost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("Last is c1-medium which is a member of a generated list of functions in the re-core.presets.instance-types namespace, these functions represents a collection of possible RAM and CPU size combinations (matching similar machine types in AWS):")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" simple "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":tiny")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":cpu")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ram")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n               "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":small")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":cpu")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ram")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n               "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":large")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":cpu")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ram")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n               "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":xlarge")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":cpu")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ram")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; based on https://github.com/dustinkirkland/instance-type/blob/master/yaml/aws.yaml")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" aws "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":c1-medium")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":cpu")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ram")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":c1-xlarge")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":cpu")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ram")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":c3-2xlarge")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":cpu")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ram")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":c3-4xlarge")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":cpu")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ram")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("..")]),t._v(".\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("For more please check the matching re-core "),a("a",{attrs:{href:"https://re-ops.github.io/re-core/re-core.presets.common.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("docs"),a("OutboundLink")],1),t._v(" section and the "),a("a",{attrs:{href:"https://github.com/re-ops/re-core/tree/master/src/re_core/presets",target:"_blank",rel:"noopener noreferrer"}},[t._v("source code"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"re-mote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#re-mote"}},[t._v("#")]),t._v(" Re-mote")]),t._v(" "),a("p",[t._v("One of Re-mote main abstraction is the Hosts type:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" sandbox "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Hosts. "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":user")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"re-ops"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ssh-key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/foo/.ssh/id_rsa} ["')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("168")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("168")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("It includes an authentication map (user and ssh key) and a list of hosts, protocols with different operations extend the Hosts type:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; re-mote.repl.base")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defrecord")]),t._v(" Hosts "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("auth hosts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  Shell\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ls "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("this target flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("this "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run-hosts this "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ls"')]),t._v(" ~target ~flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Bundled operations range from package management to ZFS operations like scrub and even nmap port scanning.")]),t._v(" "),a("p",[t._v("Operations are used within pipelines:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defn")]),t._v(" listing "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ls hs "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-la"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pretty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Running a workflow is simple as calling a function:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("re-mote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("λ: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listing sandbox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nRun summary:\n\n   ✔ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("168")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("\n   ✔ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("168")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v("\n   ✔ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("168")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("\n\n")])])]),a("p",[t._v("For a complete listing of workflows check Re-mote "),a("a",{attrs:{href:"https://re-ops.github.io/re-mote",target:"_blank",rel:"noopener noreferrer"}},[t._v("API"),a("OutboundLink")],1),t._v(" documentation.")]),t._v(" "),a("h3",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("p",[t._v("Re-mote can invoke distributed Clojure functions using Re-gent processes across the cluster, the functions are defined under re_mote/zero/functions.clj:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ns")]),t._v(" re-mote.zero.functions\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":require")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("clojure.java.shell "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":refer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serializable."),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":as")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("me.raynes.fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":refer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list-dir tmpdir exists? file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Package manager")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" ^"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":doc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update package manager"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" pkg-update\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s/"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("case "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":Ubuntu")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sh "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sudo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apt"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":FreeBSD")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sh "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sudo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pkg"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex-info "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"not supported"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":os")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Functions may use any bundled Clojure and Java libraries like:")]),t._v(" "),a("ul",[a("li",[t._v("me.raynes.fs for file system manipulation")]),t._v(" "),a("li",[t._v("com.github.oshi for collecting OS/Hardware information")]),t._v(" "),a("li",[t._v("re-scan for running Nmap scans")])]),t._v(" "),a("p",[t._v("Adding new libraries is pretty simple:")]),t._v(" "),a("ul",[a("li",[t._v("Add the library to both re-gent/project.clj and re-mote/project.clj.")]),t._v(" "),a("li",[t._v("Import the required ns/classes into re-mote.zero.functions and re-gent.zero.functions")]),t._v(" "),a("li",[t._v("Build the re-gent binary using bin/binary.sh")]),t._v(" "),a("li",[t._v("Deploy re-gent to the machines using the deploy workflow")])]),t._v(" "),a("h1",{attrs:{id:"scheduling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scheduling"}},[t._v("#")]),t._v(" Scheduling")]),t._v(" "),a("p",[t._v("Invoking tasks in the REPL is easy but in some cases we would like to set a task to be executed at repeated short intervals (like collecting metrics):")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; collecting RAM, Network, Load anc Cpu usage")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defn")]),t._v(" stats-jobs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("watch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":ram")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ram-persist hs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("watch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":net")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("net-persist hs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("watch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":cpu")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cpu-persist hs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("watch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":load")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("load-persist hs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Another use case is executing long running tasks once a day:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; running apt uprgrade on hosts every day at 4AM")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defn")]),t._v(" apt-jobs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hosts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("watch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":upgrade")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("every-day "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("upgrade hosts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("Or even once a week:")]),t._v(" "),a("div",{staticClass:"language-clojure extra-class"},[a("pre",{pre:!0,attrs:{class:"language-clojure"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; Running zfs scrub every Saturday at 4AM")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defn")]),t._v(" zfs-maintain "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":keys")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hosts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":as")]),t._v(" hs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("host "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("first")]),t._v(" hosts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("watch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("keyword")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("str")]),t._v(" host "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-datastore-scrub"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("at-day DateTimeConstants/SATURDAY "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scrub hs "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datastore"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tofrom "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("<")]),t._v("< "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scrubing ~{host}/datastore"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Its possible to automate any function call using the watch function including the creation of VMs or provisioning, check Re-share "),a("a",{attrs:{href:"https://re-ops.github.io/re-share",target:"_blank",rel:"noopener noreferrer"}},[t._v("docs"),a("OutboundLink")],1),t._v(" for full API documentation.")])])}),[],!1,null,null,null);s.default=e.exports}}]);